
tasks=[ 

  # node 2
  Accelerometer(100,1):(nodeID=2), # task 0, 50Hz
  Mean(10,10):(nodeID=2),         # task 1, X
  Mean(10,10):(nodeID=2),         # task 2, Y
  Mean(10,10):(nodeID=2),         # task 3, Z
  DecisionTree( 3, >,2,2240, class,1, >,0,2240, class, 2, >,1,2240, class,3, <,1,1800, class,4, <,0,1800, class,5, <,2,1800, class,6, class,0):(nodeID=2), # task 4
  
  # node 3
  Accelerometer(100,1):(nodeID=3), # task 5, 50Hz
  Mean(10,10):(nodeID=3),         # task 6, X
  Mean(10,10):(nodeID=3),         # task 7, Y
  Mean(10,10):(nodeID=3),         # task 8, Z
  DecisionTree( 3, >,2,2240, class,1, >,0,2240, class, 2, >,1,2240, class,3, <,1,1800, class,4, <,0,1800, class,5, <,2,1800, class,6, class,0):(nodeID=3), # task 9
  
  # node 4
  Accelerometer(100,1):(nodeID=4), # task 10, 50Hz
  Mean(10,10):(nodeID=4),         # task 11, X
  Mean(10,10):(nodeID=4),         # task 12, Y
  Mean(10,10):(nodeID=4),         # task 13, Z
  DecisionTree( 3, >,2,2240, class,1, >,0,2240, class, 2, >,1,2240, class,3, <,1,1800, class,4, <,0,1800, class,5, <,2,1800, class,6, class,0):(nodeID=4), # task 14
  
  # node 5
  Accelerometer(100,1):(nodeID=5), # task 15, 50Hz
  Mean(10,10):(nodeID=5),         # task 16, X
  Mean(10,10):(nodeID=5),         # task 17, Y
  Mean(10,10):(nodeID=5),         # task 18, Z
  DecisionTree( 3, >,2,2240, class,1, >,0,2240, class, 2, >,1,2240, class,3, <,1,1800, class,4, <,0,1800, class,5, <,2,1800, class,6, class,0):(nodeID=5), # task 19

  # node 6
  Accelerometer(100,1):(nodeID=6), # task 20, 50Hz
  Mean(10,10):(nodeID=6),         # task 21, X
  Mean(10,10):(nodeID=6),         # task 22, Y
  Mean(10,10):(nodeID=6),         # task 23, Z
  DecisionTree( 3, >,2,2240, class,1, >,0,2240, class, 2, >,1,2240, class,3, <,1,1800, class,4, <,0,1800, class,5, <,2,1800, class,6, class,0):(nodeID=6), # task 24

  # node 7
  Accelerometer(100,1):(nodeID=7), # task 25, 50Hz
  Mean(10,10):(nodeID=7),         # task 26, X
  Mean(10,10):(nodeID=7),         # task 27, Y
  Mean(10,10):(nodeID=7),         # task 28, Z
  DecisionTree( 3, >,2,2240, class,1, >,0,2240, class, 2, >,1,2240, class,3, <,1,1800, class,4, <,0,1800, class,5, <,2,1800, class,6, class,0):(nodeID=7), # task 29

  Merge(6,2):(nodeID=0), # task 30
  Sum(12,12):(nodeID=0), # task 31
  Sink():(nodeID=0) # task 32
  ]

connections=[
  #node 2
  Connection( 0,0, 1,0), #mean
  Connection( 0,1, 2,0),
  Connection( 0,2, 3,0),
  Connection( 1,0, 4,0), # collect
  Connection( 2,0, 4,1),
  Connection( 3,0, 4,2),
  Connection( 4,0,30,0), # deliver result
  #node 3
  Connection( 5,0, 6,0), #mean
  Connection( 5,1, 7,0),
  Connection( 5,2, 8,0),
  Connection( 6,0, 9,0), # collect
  Connection( 7,0, 9,1),
  Connection( 8,0, 9,2),
  Connection( 9,0,30,1), # deliver result
  #node 4
  Connection(10,0,11,0), #mean
  Connection(10,1,12,0),
  Connection(10,2,13,0),
  Connection(11,0,14,0), # collect
  Connection(12,0,14,1),
  Connection(13,0,14,2),
  Connection(14,0,30,2), # deliver result
  #node 8
  Connection(15,0,16,0), #mean
  Connection(15,1,17,0),
  Connection(15,2,18,0),
  Connection(16,0,19,0), # collect
  Connection(17,0,19,1),
  Connection(18,0,19,2),
  Connection(19,0,30,3), # deliver result
  #node 6
  Connection(20,0,21,0), #mean
  Connection(20,1,22,0),
  Connection(20,2,23,0),
  Connection(21,0,24,0), # collect
  Connection(22,0,24,1),
  Connection(23,0,24,2),
  Connection(24,0,30,4), # deliver result
  #node 7
  Connection(25,0,26,0), #mean
  Connection(25,1,27,0),
  Connection(25,2,28,0),
  Connection(26,0,29,0), # collect
  Connection(27,0,29,1),
  Connection(28,0,29,2),
  Connection(29,0,30,5), # deliver result
  
  # sum up and deliver to sink...
  Connection(30,0,31,0),
  Connection(31,0,32,0)
]
